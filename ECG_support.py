#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.4
#  in conjunction with Tcl version 8.6
#    May 22, 2022 09:06:16 PM CEST  platform: Windows NT

# from fileinput import filename
# from posixpath import dirname
import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
from tkinter import filedialog as fd
from tkinter.messagebox import showinfo
from matplotlib.pyplot import plot
import wfdb
import os

import ECG

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = ECG.Toplevel1(_top1)
    root.mainloop()

def loadFile(*args):
    print('loadFile')
    filetypes = (
        ('dat files', '*.dat'),
        ('atr files', '*.atr'),
        ('All files', '*.*')
    )

    filepath = fd.askopenfilename(
        title='Open a file',
        initialdir='C:\\Users\\sedwa\\ltdb',
        filetypes=filetypes)
    
    fullPath = os.path.dirname(filepath)
    dirname = os.path.basename(fullPath)
    filename = os.path.basename(filepath)
    dirAndFile = dirname + "/" + filename
    
    basename = os.path.basename(filepath)
    file_name = os.path.splitext(basename)[0]

    print(dirAndFile)
    print(type(dirAndFile))
    plotFile(dirAndFile)
    
    sys.stdout.flush()

def maybe_download_db(db):

  if(os.path.isdir(db)):
    return
  else:
    wfdb.dl_database(db, db)
    
def plotFile(*args):
    for arg in args:
        maybe_download_db(os.path.dirname(arg))
        records = wfdb.get_record_list(os.path.dirname(arg))
        selected_rec = os.path.basename(arg)
        print(records)
        print("selected_rec: " + selected_rec)
        record = wfdb.rdrecord(os.path.dirname(arg) + "\\" + os.path.splitext(selected_rec)[0])
        print(record)
        sampto = 10000 if record.sig_len > 10000 else record.sig_len
        info = wfdb.rdsamp(os.path.splitext(selected_rec)[0], sampto=sampto)
        record, fields = wfdb.rdsamp(
        (selected_rec), sampto=sampto, channels=[0])
    
def commandDummy(*args):
    print('unknown_support.commandDummy')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

if __name__ == '__main__':
    ECG.start_up()




